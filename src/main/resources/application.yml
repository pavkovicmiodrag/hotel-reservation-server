info:
  name: hotel-reservation-server
  description: Hotel resrvation use case application
   
directory: d:\test

server:
  port: ${PORT:9080}
spring:
    profiles:
        active: dev
    datasource:
            dataSourceClassName: org.h2.jdbcx.JdbcDataSource
            url: jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1
            platform: h2
            databaseName: myDb
            serverName:
            username: sa
            password:
    h2:
        console:
          enabled: true
          path: /h2
    jpa:
        database-platform: org.hibernate.dialect.H2Dialect
        database: H2
        openInView: false
        show_sql: true
        generate-ddl: true
        hibernate:
            ddl-auto: create-drop
            naming-strategy: org.hibernate.cfg.EJB3NamingStrategy
        properties:
            hibernate.cache.use_query_cache: false
            hibernate.generate_statistics: true
    rabbitmq:
        username: guest
        password: guest
        host: localhost
        port: 5672
        consumer:
hotelserver:
  amqp:
    exchange: twinsoft.hotelserver.exchange  
    queue: twinsoft.hotelserver.hotel.queue
    routing-key: twinsoft.hotelserver.hotel.key  